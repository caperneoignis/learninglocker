
version: "3"
services:

  redis:
    image: redis:alpine
    networks:
    - frontend
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  db:
    image: mongo:3.4-jessie
    volumes:
    - db-data:/data/db
    networks:
    - backend
    deploy:
      placement:
        constraints: [node.role == manager]

  api:
    image: 127.0.0.1:5000/app
    ports:
    - "8080:8080"
    networks:
    - frontend
    - backend
    depends_on:
    - redis
    - db
    - ui
    environment:
    - SERVICE_TYPE="api"
    volumes:
    - ./docker/:/tmp/
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  ui:
    build:
      context: .
      dockerfile: docker/dockerfile
    image: 127.0.0.1:5000/app
    ports:
    - "3000:3000"
    networks:
    - backend
    - frontend
    environment:
    - SERVICE_TYPE="ui"
    depends_on:
    - db
    - redis
    volumes:
    - ./docker/:/tmp/
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  frontend:
  backend:

volumes:
  db-data: