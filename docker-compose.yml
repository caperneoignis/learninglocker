
version: "3"
services:
  nginx:
    image: nginx:latest
    volumes:
      - ./docker/learninglocker.conf:/etc/nginx/conf.d/default.conf
    networks:
      - frontend
    depends_on:
      - xapi
      - api
      - ui
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  redis:
    image: redis:alpine
    networks:
    - frontend
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  db:
    image: mongo:3.4-jessie
    volumes:
    - db-data:/data/db
    networks:
    - backend
    deploy:
      placement:
        constraints: [node.role == manager]
  xapi:
    image: learninglocker/xapi-service:latest
    env_file:
      - ./docker/xapi.env
    networks:
      - frontend
      - backend
    depends_on:
      - redis
      - db
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  api:
    image: learninglocker
    networks:
    - frontend
    - backend
    depends_on:
    - redis
    - db
    - ui
    environment:
    - SERVICE_TYPE=api
    env_file:
      - ./docker/dockerfile.env
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
  ui:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: learninglocker
    networks:
    - backend
    - frontend
    environment:
    - SERVICE_TYPE=ui
    - FIRST_TIME=1
    depends_on:
    - db
    - redis
    env_file:
      - ./docker/dockerfile.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  frontend:
  backend:

volumes:
  db-data: